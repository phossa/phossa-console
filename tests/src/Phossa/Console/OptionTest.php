<?php
namespace Phossa\Console;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-12-17 at 10:47:59.
 */
class OptionTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Option
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Option('user');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Phossa\Console\Option::setName
     */
    public function testSetName()
    {
        $this->object->setName('test');
        $this->assertEquals('test', $this->object->getName());
    }

    /**
     * @covers Phossa\Console\Option::getName
     */
    public function testGetName()
    {
        $this->assertEquals('user', $this->object->getName());
    }

    /**
     * @covers Phossa\Console\Option::setRules
     */
    public function testSetRules()
    {
        $this->object->setRules([
            'validate' => 'bingo'
        ]);
        $this->assertEquals('bingo', $this->object->getRules()['validate']);
    }

    /**
     * @covers Phossa\Console\Option::getRules
     */
    public function testGetRules()
    {
        $this->assertEquals('en_US', $this->object->getRules()['lang']);
    }

    /**
     * @covers Phossa\Console\Option::setValue
     */
    public function testSetValue()
    {
        $this->object->setValue();
        $this->assertEquals('', $this->object->getValue());

        $this->object->setValue('bingo');
        $this->assertEquals(['', 'bingo'], $this->object->getValue());

        $this->object->setValue('a|c');
        $this->assertEquals(['', 'bingo', 'a', 'c'], $this->object->getValue());

        $this->object->setValue('b|d', '');
        $this->assertEquals(
            ['', 'bingo', 'a', 'c', 'b|d'],
            $this->object->getValue()
        );
    }

    /**
     * @covers Phossa\Console\Option::resetValue
     */
    public function testResetValue()
    {
        $this->object->resetValue();
        $this->assertTrue(is_null($this->object->getValue()));
    }

    /**
     * @covers Phossa\Console\Option::getValue
     */
    public function testGetValue()
    {
        $this->object->setValue('bingo');
        $this->assertEquals('bingo', $this->object->getValue());
    }

    /**
     * @covers Phossa\Console\Option::getSynonyms
     */
    public function testGetSynonyms()
    {
        $this->object->setRules(['synonyms' => ['u', 'x']]);
        $this->assertEquals(['u', 'x'], $this->object->getSynonyms());
    }

    /**
     * @covers Phossa\Console\Option::isRequired
     */
    public function testIsRequired()
    {
        $this->assertFalse($this->object->isRequired());

        $this->object->setRules(['settings' => Option::SETTING_REQUIRED]);
        $this->assertTrue($this->object->isRequired());
    }

    /**
     * @covers Phossa\Console\Option::needValue
     */
    public function testNeedValue()
    {
        $this->assertFalse($this->object->needValue());

        $this->object->setRules(['settings' => Option::SETTING_VALUE]);
        $this->assertTrue($this->object->needValue());

        $this->object->setRules(['settings' => Option::SETTING_VALUE_REQ]);
        $this->assertTrue($this->object->needValue());
    }

    /**
     * @covers Phossa\Console\Option::isValueRequired
     */
    public function testIsValueRequired()
    {
        $this->object->setRules(['settings' => Option::SETTING_VALUE]);
        $this->assertFalse($this->object->isValueRequired());

        $this->object->setRules(['settings' => Option::SETTING_VALUE_REQ]);
        $this->assertTrue($this->object->isValueRequired());
    }

    /**
     * @covers Phossa\Console\Option::getHelp
     */
    public function testGetHelp()
    {
        $msg = 'help me';

        $this->object->setRules([
            'help'          => $msg,
            'help_zh_CN'    => 'xxx'
        ]);
        $this->assertEquals($msg, $this->object->getHelp());
        $this->assertEquals('xxx', $this->object->getHelp('zh_CN'));
    }
}
